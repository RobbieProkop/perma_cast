---
import Card from "../components/Card.astro";
import { uploadFile } from "../fileUpload.js";

export interface Props {
  fileUpload: boolean;
}

const { fileUpload } = Astro.props as Props;
---

<section class="contact">
  <div class="container">
    <Card>
      <form
        class="form"
        name="contact"
        id="form"
        method="POST"
        enctype="multipart/form-data"
        data-netlify="true"
      >
        <div class="form-group">
          <label for="name">Name (required)</label>
          <input type="text" id="name" name="name" placeholder="Enter Name" />
        </div>
        <div class="form-group">
          <label for="email">Email (required)</label>
          <input
            type="email"
            id="email"
            name="email"
            placeholder="Enter E-mail"
          />
        </div>
        <div class="form-group">
          <label for="subject">Subject</label>
          <input
            type="text"
            id="subject"
            name="subject"
            placeholder="Enter Subject"
          />
        </div>
        <div class="form-group">
          <textarea
            id="message"
            name="message"
            rows="5"
            placeholder="Write a message"></textarea>
        </div>
        {
          fileUpload && (
            <div class="form-group">
              <input
                type="file"
                id="file"
                accept=".jpg, jpeg, .png, .pdf, "
                class="btn-resume"
              />
              <span id="errorInfo" class="error" />
            </div>
          )
        }
        <button class="btn btn-primary btn-block" id="formBtn" type="submit"
          >Submit</button
        >
      </form>
    </Card>
  </div>
</section>

<script>
  const form = document.getElementById("form") as HTMLInputElement;
  const file = document.getElementById("file") as HTMLInputElement;
  const errSpan = document.getElementById("errorInfo") as HTMLElement;
  const name = document.getElementById("name") as HTMLInputElement;
  const email = document.getElementById("email") as HTMLInputElement;

  const { google } = require("googleapis");
  const fs = require("fs");
  const path = require("path");

  const CLIENT_ID = process.env.CLIENT_ID;
  const CLIENT_SECRET = process.env.CLIENT_SECRET;
  const REDIRECT_URI = process.env.REDIRECT_URI;
  const REFRESH_TOKEN = process.env.REFRESH_TOKEN;

  const oauth2Client = new google.auth.OAuth2(
    CLIENT_ID,
    CLIENT_SECRET,
    REDIRECT_URI
  );

  oauth2Client.setCredentials({ refresh_token: REFRESH_TOKEN });

  const drive = google.drive({
    version: "v3",
    auth: oauth2Client,
  });

  const today = new Date();

  const uploadFile = async (file: string) => {
    const filePath = path.join(__dirname, file);
    try {
      const res = await drive.files.create({
        requestBody: {
          name: `resume-upload-${today}.jpeg`,
          mimeType: "image/jpeg",
        },
        media: {
          mimeType: "image/jpeg",
          body: fs.createReadStream(filePath),
        },
      });

      console.log("res.data :>> ", res.data);
    } catch (error) {
      console.log("error", error);
    }
  };

  const validateSize = () => {
    if (!file || !file.files) throw new Error("Error");
    if (!file.files[0]) {
      errSpan.textContent = "No File Selected";
      return false;
    }
    const size = file.files[0].size;
    if (size && size > 5000000) {
      errSpan.textContent = "File size exceded limit of 5mb";
      return false;
    }

    return true;
  };

  form.addEventListener("submit", (e) => {
    if (name.value.length === 0) {
      e.preventDefault();
      name.parentElement?.classList.add("error");
      return;
    }
    if (name.parentElement?.classList.contains("error")) {
      name.parentElement.classList.remove("error");
    }
    if (email.value.length === 0) {
      e.preventDefault();
      email.parentElement?.classList.add("error");
      return;
    }
    if (email.parentElement?.classList.contains("error")) {
      email.parentElement.classList.remove("error");
    }
    if (!validateSize()) {
      e.preventDefault();
    }

    // uploadFile(file.files[0]);
  });
</script>
